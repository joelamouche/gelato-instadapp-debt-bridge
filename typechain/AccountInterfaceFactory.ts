/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, Signer } from "ethers";
import { Provider } from "ethers/providers";

import { AccountInterface } from "./AccountInterface";

export class AccountInterfaceFactory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccountInterface {
    return new Contract(address, _abi, signerOrProvider) as AccountInterface;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_targets",
        type: "address[]"
      },
      {
        internalType: "bytes[]",
        name: "_datas",
        type: "bytes[]"
      },
      {
        internalType: "address",
        name: "_origin",
        type: "address"
      }
    ],
    name: "cast",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "responses",
        type: "bytes32[]"
      }
    ],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address"
      }
    ],
    name: "isAuth",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "shield",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
