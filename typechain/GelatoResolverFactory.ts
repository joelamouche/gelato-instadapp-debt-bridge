/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { GelatoResolver } from "./GelatoResolver";

export class GelatoResolverFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<GelatoResolver> {
    return super.deploy(overrides) as Promise<GelatoResolver>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): GelatoResolver {
    return super.attach(address) as GelatoResolver;
  }
  connect(signer: Signer): GelatoResolverFactory {
    return super.connect(signer) as GelatoResolverFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GelatoResolver {
    return new Contract(address, _abi, signerOrProvider) as GelatoResolver;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "userProxy",
            type: "address"
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address"
              },
              {
                internalType: "address",
                name: "module",
                type: "address"
              }
            ],
            internalType: "struct Provider",
            name: "provider",
            type: "tuple"
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256"
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "inst",
                    type: "address"
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes"
                  }
                ],
                internalType: "struct Condition[]",
                name: "conditions",
                type: "tuple[]"
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address"
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes"
                  },
                  {
                    internalType: "enum Operation",
                    name: "operation",
                    type: "uint8"
                  },
                  {
                    internalType: "enum DataFlow",
                    name: "dataFlow",
                    type: "uint8"
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256"
                  },
                  {
                    internalType: "bool",
                    name: "termsOkCheck",
                    type: "bool"
                  }
                ],
                internalType: "struct Action[]",
                name: "actions",
                type: "tuple[]"
              },
              {
                internalType: "uint256",
                name: "selfProviderGasLimit",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "selfProviderGasPriceCeil",
                type: "uint256"
              }
            ],
            internalType: "struct Task[]",
            name: "tasks",
            type: "tuple[]"
          },
          {
            internalType: "uint256",
            name: "expiryDate",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "cycleId",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "submissionsLeft",
            type: "uint256"
          }
        ],
        indexed: true,
        internalType: "struct TaskReceipt[]",
        name: "taskReceipt",
        type: "tuple[]"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256"
      }
    ],
    name: "LogMultiCancelTasks",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "executor",
        type: "address"
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "conditions",
            type: "address[]"
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8"
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8"
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256"
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool"
              }
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]"
          },
          {
            internalType: "uint256",
            name: "gasPriceCeil",
            type: "uint256"
          }
        ],
        indexed: true,
        internalType: "struct TaskSpec[]",
        name: "taskspecs",
        type: "tuple[]"
      },
      {
        indexed: true,
        internalType: "address[]",
        name: "modules",
        type: "address[]"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethToDeposit",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256"
      }
    ],
    name: "LogMultiProvide",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "conditions",
            type: "address[]"
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8"
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8"
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256"
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool"
              }
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]"
          },
          {
            internalType: "uint256",
            name: "gasPriceCeil",
            type: "uint256"
          }
        ],
        indexed: true,
        internalType: "struct TaskSpec[]",
        name: "taskspecs",
        type: "tuple[]"
      },
      {
        indexed: true,
        internalType: "address[]",
        name: "modules",
        type: "address[]"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethToWithdraw",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256"
      }
    ],
    name: "LogMultiUnprovide",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address"
          },
          {
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        indexed: true,
        internalType: "struct Provider",
        name: "provider",
        type: "tuple"
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "inst",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              }
            ],
            internalType: "struct Condition[]",
            name: "conditions",
            type: "tuple[]"
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8"
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8"
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256"
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool"
              }
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]"
          },
          {
            internalType: "uint256",
            name: "selfProviderGasLimit",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "selfProviderGasPriceCeil",
            type: "uint256"
          }
        ],
        indexed: true,
        internalType: "struct Task",
        name: "task",
        type: "tuple"
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "expiryDate",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256"
      }
    ],
    name: "LogSubmitTask",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address"
          },
          {
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        indexed: true,
        internalType: "struct Provider",
        name: "provider",
        type: "tuple"
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "inst",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              }
            ],
            internalType: "struct Condition[]",
            name: "conditions",
            type: "tuple[]"
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8"
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8"
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256"
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool"
              }
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]"
          },
          {
            internalType: "uint256",
            name: "selfProviderGasLimit",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "selfProviderGasPriceCeil",
            type: "uint256"
          }
        ],
        indexed: true,
        internalType: "struct Task[]",
        name: "tasks",
        type: "tuple[]"
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "expiryDate",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256"
      }
    ],
    name: "LogSubmitTaskChain",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address"
          },
          {
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        indexed: true,
        internalType: "struct Provider",
        name: "provider",
        type: "tuple"
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "inst",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              }
            ],
            internalType: "struct Condition[]",
            name: "conditions",
            type: "tuple[]"
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8"
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8"
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256"
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool"
              }
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]"
          },
          {
            internalType: "uint256",
            name: "selfProviderGasLimit",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "selfProviderGasPriceCeil",
            type: "uint256"
          }
        ],
        indexed: true,
        internalType: "struct Task[]",
        name: "tasks",
        type: "tuple[]"
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "expiryDate",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256"
      }
    ],
    name: "LogSubmitTaskCycle",
    type: "event"
  },
  {
    inputs: [],
    name: "connectorID",
    outputs: [
      {
        internalType: "uint256",
        name: "_type",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "userProxy",
            type: "address"
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address"
              },
              {
                internalType: "address",
                name: "module",
                type: "address"
              }
            ],
            internalType: "struct Provider",
            name: "provider",
            type: "tuple"
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256"
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "inst",
                    type: "address"
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes"
                  }
                ],
                internalType: "struct Condition[]",
                name: "conditions",
                type: "tuple[]"
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address"
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes"
                  },
                  {
                    internalType: "enum Operation",
                    name: "operation",
                    type: "uint8"
                  },
                  {
                    internalType: "enum DataFlow",
                    name: "dataFlow",
                    type: "uint8"
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256"
                  },
                  {
                    internalType: "bool",
                    name: "termsOkCheck",
                    type: "bool"
                  }
                ],
                internalType: "struct Action[]",
                name: "actions",
                type: "tuple[]"
              },
              {
                internalType: "uint256",
                name: "selfProviderGasLimit",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "selfProviderGasPriceCeil",
                type: "uint256"
              }
            ],
            internalType: "struct Task[]",
            name: "tasks",
            type: "tuple[]"
          },
          {
            internalType: "uint256",
            name: "expiryDate",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "cycleId",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "submissionsLeft",
            type: "uint256"
          }
        ],
        internalType: "struct TaskReceipt[]",
        name: "_taskReceipts",
        type: "tuple[]"
      }
    ],
    name: "multiCancelTasks",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_executor",
        type: "address"
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "conditions",
            type: "address[]"
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8"
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8"
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256"
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool"
              }
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]"
          },
          {
            internalType: "uint256",
            name: "gasPriceCeil",
            type: "uint256"
          }
        ],
        internalType: "struct TaskSpec[]",
        name: "_taskSpecs",
        type: "tuple[]"
      },
      {
        internalType: "address[]",
        name: "_modules",
        type: "address[]"
      },
      {
        internalType: "uint256",
        name: "_ethToDeposit",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_getId",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_setId",
        type: "uint256"
      }
    ],
    name: "multiProvide",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_withdrawAmount",
        type: "uint256"
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "conditions",
            type: "address[]"
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8"
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8"
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256"
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool"
              }
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]"
          },
          {
            internalType: "uint256",
            name: "gasPriceCeil",
            type: "uint256"
          }
        ],
        internalType: "struct TaskSpec[]",
        name: "_taskSpecs",
        type: "tuple[]"
      },
      {
        internalType: "address[]",
        name: "_modules",
        type: "address[]"
      },
      {
        internalType: "uint256",
        name: "_getId",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_setId",
        type: "uint256"
      }
    ],
    name: "multiUnprovide",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address"
          },
          {
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        internalType: "struct Provider",
        name: "_provider",
        type: "tuple"
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "inst",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              }
            ],
            internalType: "struct Condition[]",
            name: "conditions",
            type: "tuple[]"
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8"
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8"
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256"
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool"
              }
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]"
          },
          {
            internalType: "uint256",
            name: "selfProviderGasLimit",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "selfProviderGasPriceCeil",
            type: "uint256"
          }
        ],
        internalType: "struct Task",
        name: "_task",
        type: "tuple"
      },
      {
        internalType: "uint256",
        name: "_expiryDate",
        type: "uint256"
      }
    ],
    name: "submitTask",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address"
          },
          {
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        internalType: "struct Provider",
        name: "_provider",
        type: "tuple"
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "inst",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              }
            ],
            internalType: "struct Condition[]",
            name: "conditions",
            type: "tuple[]"
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8"
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8"
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256"
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool"
              }
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]"
          },
          {
            internalType: "uint256",
            name: "selfProviderGasLimit",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "selfProviderGasPriceCeil",
            type: "uint256"
          }
        ],
        internalType: "struct Task[]",
        name: "_tasks",
        type: "tuple[]"
      },
      {
        internalType: "uint256",
        name: "_expiryDate",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_sumOfRequestedTaskSubmits",
        type: "uint256"
      }
    ],
    name: "submitTaskChain",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address"
          },
          {
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        internalType: "struct Provider",
        name: "_provider",
        type: "tuple"
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "inst",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              }
            ],
            internalType: "struct Condition[]",
            name: "conditions",
            type: "tuple[]"
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8"
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8"
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256"
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool"
              }
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]"
          },
          {
            internalType: "uint256",
            name: "selfProviderGasLimit",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "selfProviderGasPriceCeil",
            type: "uint256"
          }
        ],
        internalType: "struct Task[]",
        name: "_tasks",
        type: "tuple[]"
      },
      {
        internalType: "uint256",
        name: "_expiryDate",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_cycles",
        type: "uint256"
      }
    ],
    name: "submitTaskCycle",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061153a806100206000396000f3fe6080604052600436106100705760003560e01c80636cd3d8981161004e5780636cd3d898146100b0578063b348e268146100c3578063eb15f781146100d6578063ff92b1a81461010257610070565b806302526490146100755780632738a7881461008a5780633e75a9a81461009d575b600080fd5b610088610083366004610934565b610115565b005b610088610098366004610a0b565b6101f2565b6100886100ab3660046108f4565b6102fd565b6100886100be36600461085e565b6103ba565b6100886100d1366004610934565b6104d3565b3480156100e257600080fd5b506100eb6105a1565b6040516100f99291906112c8565b60405180910390f35b610088610110366004610998565b6105a9565b61011d61067e565b6001600160a01b0316630252649086868686866040518663ffffffff1660e01b81526004016101509594939291906112fc565b600060405180830381600087803b15801561016a57600080fd5b505af115801561017e573d6000803e3d6000fd5b5050505081848460405161019392919061117f565b6040518091039020866040516101a9919061118c565b60405180910390207f6e618ca93d8007a3bb048d87cc0e7bf12bddc6ca3e336c153890bc0b6f66e9f66000806040516101e39291906112c8565b60405180910390a45050505050565b60006101fe8389610696565b90504761020961067e565b6001600160a01b031663b300f752838a8a8a8a6040518663ffffffff1660e01b815260040161023c95949392919061136a565b600060405180830381600087803b15801561025657600080fd5b505af115801561026a573d6000803e3d6000fd5b50505050600061027a4783610731565b90506102868482610763565b868660405161029692919061105e565b604051809103902089896040516102ae929190611118565b60405180910390207fc44585ae385fe053d798d56dc20dc0f0beade803098d105d289637d878fa9c7b8388886040516102e993929190611384565b60405180910390a350505050505050505050565b61030561067e565b6001600160a01b0316633e75a9a883836040518363ffffffff1660e01b81526004016103329291906111f1565b600060405180830381600087803b15801561034c57600080fd5b505af1158015610360573d6000803e3d6000fd5b505050508181604051610374929190611073565b60405180910390207fb42519a7cf5f104a27b62b10dc1e67721be4b68791899606dd15e1b017bd96316000806040516103ae9291906112c8565b60405180910390a25050565b60006103c68385610696565b905060001981146103d757806103d9565b475b90506103e361067e565b6001600160a01b0316639aad3798828b8b8b8b8b6040518763ffffffff1660e01b81526004016104179594939291906111ad565b6000604051808303818588803b15801561043057600080fd5b505af1158015610444573d6000803e3d6000fd5b50505050506104538282610763565b858560405161046392919061105e565b6040518091039020888860405161047b929190611118565b60405180910390208a6001600160a01b03167f1e9ff70996f352b5b70751209e03ae367633703bfc74ccc966b87e70ab5713618487876040516104c093929190611384565b60405180910390a4505050505050505050565b6104db61067e565b6001600160a01b031663b348e26886868686866040518663ffffffff1660e01b815260040161050e9594939291906112fc565b600060405180830381600087803b15801561052857600080fd5b505af115801561053c573d6000803e3d6000fd5b5050505081848460405161055192919061117f565b604051809103902086604051610567919061118c565b60405180910390207f9e2ce841f586026d01f4cdb7bcd28c46154ba65e6766033fee248e3690c35a0d6000806040516101e39291906112c8565b600190602a90565b6105b161067e565b6001600160a01b031663ff92b1a88484846040518463ffffffff1660e01b81526004016105e093929190611331565b600060405180830381600087803b1580156105fa57600080fd5b505af115801561060e573d6000803e3d6000fd5b50505050808260405161062191906111a1565b604051809103902084604051610637919061118c565b60405180910390207f054a2512b2e1ba381f3ca2abbf5515644385116f44cf8d635382f6df3f4105576000806040516106719291906112c8565b60405180910390a4505050565b731d681d76ce96e4d70a88a00ebbcfc1e47808d0b890565b60008215610728576106a66107d5565b6001600160a01b031663a9c70eaa846040518263ffffffff1660e01b81526004016106d19190611361565b602060405180830381600087803b1580156106eb57600080fd5b505af11580156106ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072391906109f3565b61072a565b815b9392505050565b8082038281111561075d5760405162461bcd60e51b8152600401610754906112d6565b60405180910390fd5b92915050565b81156107d1576107716107d5565b6001600160a01b03166361e3c94483836040518363ffffffff1660e01b815260040161079e9291906112c8565b600060405180830381600087803b1580156107b857600080fd5b505af11580156107cc573d6000803e3d6000fd5b505050505b5050565b738a5419cfc711b2343c17a6abf4b2bafabb06957f90565b80356001600160a01b038116811461075d57600080fd5b60008083601f840112610815578182fd5b50813567ffffffffffffffff81111561082c578182fd5b602083019150836020808302850101111561084657600080fd5b9250929050565b600060408284031215610728578081fd5b60008060008060008060008060c0898b031215610879578384fd5b6108838a8a6107ed565b9750602089013567ffffffffffffffff8082111561089f578586fd5b6108ab8c838d01610804565b909950975060408b01359150808211156108c3578586fd5b506108d08b828c01610804565b999c989b5096999698976060880135976080810135975060a0013595509350505050565b60008060208385031215610906578182fd5b823567ffffffffffffffff81111561091c578283fd5b61092885828601610804565b90969095509350505050565b600080600080600060a0868803121561094b578081fd5b610955878761084d565b9450604086013567ffffffffffffffff811115610970578182fd5b61097c88828901610804565b9699909850959660608101359660809091013595509350505050565b6000806000608084860312156109ac578283fd5b6109b6858561084d565b9250604084013567ffffffffffffffff8111156109d1578283fd5b8401608081870312156109e2578283fd5b929592945050506060919091013590565b600060208284031215610a04578081fd5b5051919050565b600080600080600080600060a0888a031215610a25578283fd5b87359650602088013567ffffffffffffffff80821115610a43578485fd5b610a4f8b838c01610804565b909850965060408a0135915080821115610a67578485fd5b50610a748a828b01610804565b989b979a5095989597966060870135966080013595509350505050565b6001600160a01b0316815260200190565b1515815260200190565b6000610ab7826114d8565b50815260200190565b6000610acc8383610eaf565b505060400190565b815260200190565b6001600160a01b03169052565b60008284526020808501945082825b85811015610b26578183016001600160a01b03610b1582856107ed565b168852968301969150600101610af8565b509495945050505050565b600081815b84811015610b655760208281016001600160a01b03610b5582866107ed565b1688529601959150600101610b36565b5093949350505050565b818352602080840193600091908185020181018584845b87811015610c49578284038952610b9d8288611465565b60c0868201610bb587610bb083866107ed565b610adc565b610bbf8184611400565b91508289890152610bd38389018383610e59565b925050506040610be581840184611455565b610bf182890182610ea6565b50506060610c0181840184611445565b610c0d82890182610e99565b50506080828101359087015260a0610c27818401846113ef565b9250610c3581880184610e53565b509986019994505090840190600101610b86565b5091979650505050505050565b600081815b84811015610b6557610c6d8285611465565b60208181016001600160a01b03610c8482856107ed565b168952610c918184611400565b9150610ca0838b018383610e83565b915050610cb06040840184611455565b610cb9816114e5565b8152606083013560048110610ccc578687fd5b610cfa610ce8610cde85850184610aac565b6080870135610ad4565b610cf560a08701876113ef565b610aa2565b99505050929092019150600101610c5b565b818352602080840193600091908185020181018584845b87811015610c49578284038952610d3a82886114ae565b6060808601610d4983846113a7565b92885290829052608087019189905b80821015610d8657898301610d7685610d7183876107ed565b610a91565b9450925060019190910190610d58565b505050610d95878301836113a7565b87830389890152610da7838284610b6f565b6040948501359890940197909752505098850198935090840190600101610d23565b8183526020808401936000918085028201810184845b87811015610e1557848303601f19018952610e0383610dfe848a6114c3565b610ee4565b98840198925090830190600101610ddf565b5090979650505050505050565b600081815b84811015610b6557610e4286610e3d84876114c3565b610fb9565b955060209190910190600101610e27565b15159052565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b6000828285378383015250601f01601f19160190565b610ea2816114d8565b9052565b610ea2816114e5565b8035610eba816114ef565b6001600160a01b03818116845280610ed860408501602086016107ed565b16602085015250505050565b600060808301610ef483846113a7565b608086529182905260209160a08087019084830288010183865b84811015610f7157898303609f19018452610f298287611483565b6040888201610f3c86610bb083866107ed565b610f468184611400565b93509050818a870152610f5c8287018483610e59565b968a0196955050509187019150600101610f0e565b5050610f7f858801886113a7565b9450925087810385890152610f95818585610b6f565b94505050505060408301356040850152606083013560608501528091505092915050565b6000610fc582836113a7565b8482845b8381101561102157610fdb8286611483565b60208181016001600160a01b03610ff282856107ed565b168652610fff8184611400565b935090506110108287018483610e83565b955050929092019150600101610fc9565b505061103060208601866113a7565b9350915061103f818484610c56565b6040868101358252606090960135602082015290940195945050505050565b600061106b828486610b31565b949350505050565b60008184825b8581101561110d5761108b8288611498565b6020813585526110bc6110b26110a9838801610d718587018761139a565b60408501610ac0565b6080840135610ad4565b6110c960a08401846113a7565b6110fc6110f16110e76110dd868587610e22565b60c0890135610ad4565b60e0880135610ad4565b610100870135610ad4565b975050509301925050600101611079565b509095945050505050565b60008184825b8581101561110d5761113082886114ae565b61113a81826113a7565b611145868284610b31565b9150506020611156818401846113a7565b611161848284610c56565b6040959095013585525050918201945050919091019060010161111e565b600061106b828486610e22565b60006111988284610eaf565b50604001919050565b600061072a8284610fb9565b6001600160a01b03861681526060602082018190526000906111d29083018688610d0c565b82810360408401526111e5818587610ae9565b98975050505050505050565b602080825281810183905260009060408084018583028501820187855b888110156112ba57878303603f19018452611229828b611498565b6101208135855286820161123f818a85016107ed565b61124b8a880182610adc565b5061125888870182610eaf565b506080828101359086015260a0611271818401846113a7565b83838901526112838489018284610dc9565b60c086810135908a015260e080870135908a015261010095860135959098019490945250505093860193509085019060010161120e565b509098975050505050505050565b918252602082015260400190565b6020808252600c908201526b7375622d6f766572666c6f7760a01b604082015260600190565b60006113088288610eaf565b60a0604083015261131d60a083018688610dc9565b606083019490945250608001529392505050565b600061133d8286610eaf565b608060408301526113516080830185610ee4565b9050826060830152949350505050565b90815260200190565b6000868252606060208301526111d2606083018688610d0c565b9283526020830191909152604082015260600190565b6000823561072a816114ef565b6000808335601e198436030181126113bd578283fd5b830160208101925035905067ffffffffffffffff8111156113dd57600080fd5b60208102360383131561084657600080fd5b60008235801515811461072a578182fd5b6000808335601e19843603018112611416578283fd5b830160208101925035905067ffffffffffffffff81111561143657600080fd5b80360383131561084657600080fd5b600082356004811061072a578182fd5b600082356002811061072a578182fd5b6000823560be1983360301811261147a578182fd5b90910192915050565b60008235603e1983360301811261147a578182fd5b6000823561011e1983360301811261147a578182fd5b60008235605e1983360301811261147a578182fd5b60008235607e1983360301811261147a578182fd5b600481106114e257fe5b50565b600281106114e257fe5b6001600160a01b03811681146114e257600080fdfea2646970667358221220e40f0d722a0e01ed8d9a4f972b5a50c92fd7652f3b0a86a9338d0131902015b264736f6c634300060c0033";
