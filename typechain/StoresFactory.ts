/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { Stores } from "./Stores";

export class StoresFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<Stores> {
    return super.deploy(overrides) as Promise<Stores>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): Stores {
    return super.attach(address) as Stores;
  }
  connect(signer: Signer): StoresFactory {
    return super.connect(signer) as StoresFactory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Stores {
    return new Contract(address, _abi, signerOrProvider) as Stores;
  }
}

const _abi = [
  {
    inputs: [],
    name: "connectorID",
    outputs: [
      {
        internalType: "uint256",
        name: "model",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060898061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063eb15f78114602d575b600080fd5b6033604c565b6040805192835260208301919091528051918290030190f35b600090819056fea2646970667358221220e4cd63ea38b26368319522389e5292b90ac0f531bd0de7efe885fe3c2925b1ef64736f6c634300060c0033";
