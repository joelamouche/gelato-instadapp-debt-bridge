/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { ConnectGelato } from "./ConnectGelato";

export class ConnectGelatoFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<ConnectGelato> {
    return super.deploy(overrides) as Promise<ConnectGelato>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): ConnectGelato {
    return super.attach(address) as ConnectGelato;
  }
  connect(signer: Signer): ConnectGelatoFactory {
    return super.connect(signer) as ConnectGelatoFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectGelato {
    return new Contract(address, _abi, signerOrProvider) as ConnectGelato;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "userProxy",
            type: "address"
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address"
              },
              {
                internalType: "address",
                name: "module",
                type: "address"
              }
            ],
            internalType: "struct Provider",
            name: "provider",
            type: "tuple"
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256"
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "inst",
                    type: "address"
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes"
                  }
                ],
                internalType: "struct Condition[]",
                name: "conditions",
                type: "tuple[]"
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address"
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes"
                  },
                  {
                    internalType: "enum Operation",
                    name: "operation",
                    type: "uint8"
                  },
                  {
                    internalType: "enum DataFlow",
                    name: "dataFlow",
                    type: "uint8"
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256"
                  },
                  {
                    internalType: "bool",
                    name: "termsOkCheck",
                    type: "bool"
                  }
                ],
                internalType: "struct Action[]",
                name: "actions",
                type: "tuple[]"
              },
              {
                internalType: "uint256",
                name: "selfProviderGasLimit",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "selfProviderGasPriceCeil",
                type: "uint256"
              }
            ],
            internalType: "struct Task[]",
            name: "tasks",
            type: "tuple[]"
          },
          {
            internalType: "uint256",
            name: "expiryDate",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "cycleId",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "submissionsLeft",
            type: "uint256"
          }
        ],
        indexed: true,
        internalType: "struct TaskReceipt[]",
        name: "taskReceipt",
        type: "tuple[]"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256"
      }
    ],
    name: "LogMultiCancelTasks",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "executor",
        type: "address"
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "conditions",
            type: "address[]"
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8"
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8"
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256"
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool"
              }
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]"
          },
          {
            internalType: "uint256",
            name: "gasPriceCeil",
            type: "uint256"
          }
        ],
        indexed: true,
        internalType: "struct TaskSpec[]",
        name: "taskspecs",
        type: "tuple[]"
      },
      {
        indexed: true,
        internalType: "address[]",
        name: "modules",
        type: "address[]"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethToDeposit",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256"
      }
    ],
    name: "LogMultiProvide",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "conditions",
            type: "address[]"
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8"
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8"
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256"
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool"
              }
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]"
          },
          {
            internalType: "uint256",
            name: "gasPriceCeil",
            type: "uint256"
          }
        ],
        indexed: true,
        internalType: "struct TaskSpec[]",
        name: "taskspecs",
        type: "tuple[]"
      },
      {
        indexed: true,
        internalType: "address[]",
        name: "modules",
        type: "address[]"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethToWithdraw",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256"
      }
    ],
    name: "LogMultiUnprovide",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address"
          },
          {
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        indexed: true,
        internalType: "struct Provider",
        name: "provider",
        type: "tuple"
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "inst",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              }
            ],
            internalType: "struct Condition[]",
            name: "conditions",
            type: "tuple[]"
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8"
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8"
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256"
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool"
              }
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]"
          },
          {
            internalType: "uint256",
            name: "selfProviderGasLimit",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "selfProviderGasPriceCeil",
            type: "uint256"
          }
        ],
        indexed: true,
        internalType: "struct Task",
        name: "task",
        type: "tuple"
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "expiryDate",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256"
      }
    ],
    name: "LogSubmitTask",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address"
          },
          {
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        indexed: true,
        internalType: "struct Provider",
        name: "provider",
        type: "tuple"
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "inst",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              }
            ],
            internalType: "struct Condition[]",
            name: "conditions",
            type: "tuple[]"
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8"
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8"
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256"
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool"
              }
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]"
          },
          {
            internalType: "uint256",
            name: "selfProviderGasLimit",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "selfProviderGasPriceCeil",
            type: "uint256"
          }
        ],
        indexed: true,
        internalType: "struct Task[]",
        name: "tasks",
        type: "tuple[]"
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "expiryDate",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256"
      }
    ],
    name: "LogSubmitTaskChain",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address"
          },
          {
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        indexed: true,
        internalType: "struct Provider",
        name: "provider",
        type: "tuple"
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "inst",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              }
            ],
            internalType: "struct Condition[]",
            name: "conditions",
            type: "tuple[]"
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8"
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8"
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256"
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool"
              }
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]"
          },
          {
            internalType: "uint256",
            name: "selfProviderGasLimit",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "selfProviderGasPriceCeil",
            type: "uint256"
          }
        ],
        indexed: true,
        internalType: "struct Task[]",
        name: "tasks",
        type: "tuple[]"
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "expiryDate",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256"
      }
    ],
    name: "LogSubmitTaskCycle",
    type: "event"
  },
  {
    inputs: [],
    name: "connectorID",
    outputs: [
      {
        internalType: "uint256",
        name: "_type",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "userProxy",
            type: "address"
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address"
              },
              {
                internalType: "address",
                name: "module",
                type: "address"
              }
            ],
            internalType: "struct Provider",
            name: "provider",
            type: "tuple"
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256"
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "inst",
                    type: "address"
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes"
                  }
                ],
                internalType: "struct Condition[]",
                name: "conditions",
                type: "tuple[]"
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address"
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes"
                  },
                  {
                    internalType: "enum Operation",
                    name: "operation",
                    type: "uint8"
                  },
                  {
                    internalType: "enum DataFlow",
                    name: "dataFlow",
                    type: "uint8"
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256"
                  },
                  {
                    internalType: "bool",
                    name: "termsOkCheck",
                    type: "bool"
                  }
                ],
                internalType: "struct Action[]",
                name: "actions",
                type: "tuple[]"
              },
              {
                internalType: "uint256",
                name: "selfProviderGasLimit",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "selfProviderGasPriceCeil",
                type: "uint256"
              }
            ],
            internalType: "struct Task[]",
            name: "tasks",
            type: "tuple[]"
          },
          {
            internalType: "uint256",
            name: "expiryDate",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "cycleId",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "submissionsLeft",
            type: "uint256"
          }
        ],
        internalType: "struct TaskReceipt[]",
        name: "_taskReceipts",
        type: "tuple[]"
      }
    ],
    name: "multiCancelTasks",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_executor",
        type: "address"
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "conditions",
            type: "address[]"
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8"
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8"
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256"
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool"
              }
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]"
          },
          {
            internalType: "uint256",
            name: "gasPriceCeil",
            type: "uint256"
          }
        ],
        internalType: "struct TaskSpec[]",
        name: "_taskSpecs",
        type: "tuple[]"
      },
      {
        internalType: "address[]",
        name: "_modules",
        type: "address[]"
      },
      {
        internalType: "uint256",
        name: "_ethToDeposit",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_getId",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_setId",
        type: "uint256"
      }
    ],
    name: "multiProvide",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_withdrawAmount",
        type: "uint256"
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "conditions",
            type: "address[]"
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8"
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8"
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256"
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool"
              }
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]"
          },
          {
            internalType: "uint256",
            name: "gasPriceCeil",
            type: "uint256"
          }
        ],
        internalType: "struct TaskSpec[]",
        name: "_taskSpecs",
        type: "tuple[]"
      },
      {
        internalType: "address[]",
        name: "_modules",
        type: "address[]"
      },
      {
        internalType: "uint256",
        name: "_getId",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_setId",
        type: "uint256"
      }
    ],
    name: "multiUnprovide",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address"
          },
          {
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        internalType: "struct Provider",
        name: "_provider",
        type: "tuple"
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "inst",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              }
            ],
            internalType: "struct Condition[]",
            name: "conditions",
            type: "tuple[]"
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8"
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8"
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256"
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool"
              }
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]"
          },
          {
            internalType: "uint256",
            name: "selfProviderGasLimit",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "selfProviderGasPriceCeil",
            type: "uint256"
          }
        ],
        internalType: "struct Task",
        name: "_task",
        type: "tuple"
      },
      {
        internalType: "uint256",
        name: "_expiryDate",
        type: "uint256"
      }
    ],
    name: "submitTask",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address"
          },
          {
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        internalType: "struct Provider",
        name: "_provider",
        type: "tuple"
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "inst",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              }
            ],
            internalType: "struct Condition[]",
            name: "conditions",
            type: "tuple[]"
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8"
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8"
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256"
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool"
              }
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]"
          },
          {
            internalType: "uint256",
            name: "selfProviderGasLimit",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "selfProviderGasPriceCeil",
            type: "uint256"
          }
        ],
        internalType: "struct Task[]",
        name: "_tasks",
        type: "tuple[]"
      },
      {
        internalType: "uint256",
        name: "_expiryDate",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_sumOfRequestedTaskSubmits",
        type: "uint256"
      }
    ],
    name: "submitTaskChain",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address"
          },
          {
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        internalType: "struct Provider",
        name: "_provider",
        type: "tuple"
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "inst",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              }
            ],
            internalType: "struct Condition[]",
            name: "conditions",
            type: "tuple[]"
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8"
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8"
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256"
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool"
              }
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]"
          },
          {
            internalType: "uint256",
            name: "selfProviderGasLimit",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "selfProviderGasPriceCeil",
            type: "uint256"
          }
        ],
        internalType: "struct Task[]",
        name: "_tasks",
        type: "tuple[]"
      },
      {
        internalType: "uint256",
        name: "_expiryDate",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_cycles",
        type: "uint256"
      }
    ],
    name: "submitTaskCycle",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  }
];

const _bytecode =
  "0x60c0604052600b60808190526a047656c61746f2d76312e360ac1b60a09081526200002e916000919062000043565b503480156200003c57600080fd5b50620000df565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200008657805160ff1916838001178555620000b6565b82800160010185558215620000b6579182015b82811115620000b657825182559160200191906001019062000099565b50620000c4929150620000c8565b5090565b5b80821115620000c45760008155600101620000c9565b61164280620000ef6000396000f3fe60806040526004361061007b5760003560e01c80636cd3d8981161004e5780636cd3d898146100e6578063b348e268146100f9578063eb15f7811461010c578063ff92b1a81461012f5761007b565b8063025264901461008057806306fdde03146100955780632738a788146100c05780633e75a9a8146100d3575b600080fd5b61009361008e3660046109ef565b610142565b005b3480156100a157600080fd5b506100aa61021f565b6040516100b79190611398565b60405180910390f35b6100936100ce366004610ac6565b6102ad565b6100936100e13660046109af565b6103b8565b6100936100f4366004610919565b610475565b6100936101073660046109ef565b61058e565b34801561011857600080fd5b5061012161065c565b6040516100b792919061138a565b61009361013d366004610a53565b610664565b61014a610739565b6001600160a01b0316630252649086868686866040518663ffffffff1660e01b815260040161017d959493929190611411565b600060405180830381600087803b15801561019757600080fd5b505af11580156101ab573d6000803e3d6000fd5b505050508184846040516101c0929190611241565b6040518091039020866040516101d6919061124e565b60405180910390207f6e618ca93d8007a3bb048d87cc0e7bf12bddc6ca3e336c153890bc0b6f66e9f660008060405161021092919061138a565b60405180910390a45050505050565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102a55780601f1061027a576101008083540402835291602001916102a5565b820191906000526020600020905b81548152906001019060200180831161028857829003601f168201915b505050505081565b60006102b98389610751565b9050476102c4610739565b6001600160a01b031663b300f752838a8a8a8a6040518663ffffffff1660e01b81526004016102f795949392919061147f565b600060405180830381600087803b15801561031157600080fd5b505af1158015610325573d6000803e3d6000fd5b50505050600061033547836107ec565b9050610341848261081e565b8686604051610351929190611112565b604051809103902089896040516103699291906111da565b60405180910390207fc44585ae385fe053d798d56dc20dc0f0beade803098d105d289637d878fa9c7b8388886040516103a493929190611499565b60405180910390a350505050505050505050565b6103c0610739565b6001600160a01b0316633e75a9a883836040518363ffffffff1660e01b81526004016103ed9291906112b3565b600060405180830381600087803b15801561040757600080fd5b505af115801561041b573d6000803e3d6000fd5b50505050818160405161042f929190611127565b60405180910390207fb42519a7cf5f104a27b62b10dc1e67721be4b68791899606dd15e1b017bd963160008060405161046992919061138a565b60405180910390a25050565b60006104818385610751565b905060001981146104925780610494565b475b905061049e610739565b6001600160a01b0316639aad3798828b8b8b8b8b6040518763ffffffff1660e01b81526004016104d295949392919061126f565b6000604051808303818588803b1580156104eb57600080fd5b505af11580156104ff573d6000803e3d6000fd5b505050505061050e828261081e565b858560405161051e929190611112565b604051809103902088886040516105369291906111da565b60405180910390208a6001600160a01b03167f1e9ff70996f352b5b70751209e03ae367633703bfc74ccc966b87e70ab57136184878760405161057b93929190611499565b60405180910390a4505050505050505050565b610596610739565b6001600160a01b031663b348e26886868686866040518663ffffffff1660e01b81526004016105c9959493929190611411565b600060405180830381600087803b1580156105e357600080fd5b505af11580156105f7573d6000803e3d6000fd5b5050505081848460405161060c929190611241565b604051809103902086604051610622919061124e565b60405180910390207f9e2ce841f586026d01f4cdb7bcd28c46154ba65e6766033fee248e3690c35a0d60008060405161021092919061138a565b600190602a90565b61066c610739565b6001600160a01b031663ff92b1a88484846040518463ffffffff1660e01b815260040161069b93929190611446565b600060405180830381600087803b1580156106b557600080fd5b505af11580156106c9573d6000803e3d6000fd5b5050505080826040516106dc9190611263565b6040518091039020846040516106f2919061124e565b60405180910390207f054a2512b2e1ba381f3ca2abbf5515644385116f44cf8d635382f6df3f41055760008060405161072c92919061138a565b60405180910390a4505050565b731d681d76ce96e4d70a88a00ebbcfc1e47808d0b890565b600082156107e357610761610890565b6001600160a01b031663a9c70eaa846040518263ffffffff1660e01b815260040161078c9190611476565b602060405180830381600087803b1580156107a657600080fd5b505af11580156107ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107de9190610aae565b6107e5565b815b9392505050565b808203828111156108185760405162461bcd60e51b815260040161080f906113eb565b60405180910390fd5b92915050565b811561088c5761082c610890565b6001600160a01b03166361e3c94483836040518363ffffffff1660e01b815260040161085992919061138a565b600060405180830381600087803b15801561087357600080fd5b505af1158015610887573d6000803e3d6000fd5b505050505b5050565b738a5419cfc711b2343c17a6abf4b2bafabb06957f90565b80356001600160a01b038116811461081857600080fd5b60008083601f8401126108d0578182fd5b50813567ffffffffffffffff8111156108e7578182fd5b602083019150836020808302850101111561090157600080fd5b9250929050565b6000604082840312156107e3578081fd5b60008060008060008060008060c0898b031215610934578384fd5b61093e8a8a6108a8565b9750602089013567ffffffffffffffff8082111561095a578586fd5b6109668c838d016108bf565b909950975060408b013591508082111561097e578586fd5b5061098b8b828c016108bf565b999c989b5096999698976060880135976080810135975060a0013595509350505050565b600080602083850312156109c1578182fd5b823567ffffffffffffffff8111156109d7578283fd5b6109e3858286016108bf565b90969095509350505050565b600080600080600060a08688031215610a06578081fd5b610a108787610908565b9450604086013567ffffffffffffffff811115610a2b578182fd5b610a37888289016108bf565b9699909850959660608101359660809091013595509350505050565b600080600060808486031215610a67578283fd5b610a718585610908565b9250604084013567ffffffffffffffff811115610a8c578283fd5b840160808187031215610a9d578283fd5b929592945050506060919091013590565b600060208284031215610abf578081fd5b5051919050565b600080600080600080600060a0888a031215610ae0578283fd5b87359650602088013567ffffffffffffffff80821115610afe578485fd5b610b0a8b838c016108bf565b909850965060408a0135915080821115610b22578485fd5b50610b2f8a828b016108bf565b989b979a5095989597966060870135966080013595509350505050565b6001600160a01b0316815260200190565b1515815260200190565b6000610b72826115e0565b50815260200190565b6000610b878383610f63565b505060400190565b815260200190565b6001600160a01b03169052565b60008284526020808501945082825b85811015610be1578183016001600160a01b03610bd082856108a8565b168852968301969150600101610bb3565b509495945050505050565b600081815b84811015610c205760208281016001600160a01b03610c1082866108a8565b1688529601959150600101610bf1565b5093949350505050565b60008284526020808501945084818502860184845b87811015610d02578383038952610c56828861156d565b60c0868201610c6e86610c6983866108a8565b610b97565b610c788184611508565b91508289880152610c8c8388018383610f0d565b925050506040610c9e8184018461155d565b610caa82880182610f5a565b50506060610cba8184018461154d565b610cc682880182610f4d565b50506080828101359086015260a0610ce0818401846114f7565b9250610cee81870184610f07565b509986019993505090840190600101610c3f565b5090979650505050505050565b600081815b84811015610c2057610d26828561156d565b60208181016001600160a01b03610d3d82856108a8565b168952610d4a8184611508565b9150610d59838b018383610f37565b915050610d69604084018461155d565b610d72816115ed565b8152606083013560048110610d85578687fd5b610db3610da1610d9785850184610b67565b6080870135610b8f565b610dae60a08701876114f7565b610b5d565b99505050929092019150600101610d14565b60008284526020808501945084818502860184845b87811015610d02578383038952610df182886115b6565b6060808501610e0083846114af565b92875290829052608086019189905b80821015610e3d57898301610e2d85610e2883876108a8565b610b4c565b9450925060019190910190610e0f565b505050610e4c878301836114af565b86830389880152610e5e838284610c2a565b6040948501359790940196909652505098850198925090840190600101610dda565b818352602080840193600091908185020181018584845b87811015610ec9578284038952610eb784610eb2848a6115cb565b610f98565b98850198935090840190600101610e97565b5091979650505050505050565b600081815b84811015610c2057610ef686610ef184876115cb565b61106d565b955060209190910190600101610edb565b15159052565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b6000828285378383015250601f01601f19160190565b610f56816115e0565b9052565b610f56816115ed565b8035610f6e816115f7565b6001600160a01b03818116845280610f8c60408501602086016108a8565b16602085015250505050565b600060808301610fa883846114af565b608086529182905260209160a08087019084830288010183865b8481101561102557898303609f19018452610fdd828761158b565b6040888201610ff086610c6983866108a8565b610ffa8184611508565b93509050818a8701526110108287018483610f0d565b968a0196955050509187019150600101610fc2565b5050611033858801886114af565b9450925087810385890152611049818585610c2a565b94505050505060408301356040850152606083013560608501528091505092915050565b600061107982836114af565b8482845b838110156110d55761108f828661158b565b60208181016001600160a01b036110a682856108a8565b1686526110b38184611508565b935090506110c48287018483610f37565b95505092909201915060010161107d565b50506110e460208601866114af565b935091506110f3818484610d0f565b6040868101358252606090960135602082015290940195945050505050565b600061111f828486610bec565b949350505050565b60008184825b858110156111cf5761113f82886115a0565b60208135855280820135611152816115f7565b6001600160a01b031685820152604061117c611172828801858401610b7b565b6080850135610b8f565b905061118b60a08401846114af565b6111be6111b36111a961119f868587610ed6565b60c0890135610b8f565b60e0880135610b8f565b610100870135610b8f565b97505050930192505060010161112d565b509095945050505050565b60008184825b858110156111cf576111f282886115b6565b6111fc81826114af565b611207868284610bec565b9150506020611218818401846114af565b611223848284610d0f565b604095909501358552505091820194505091909101906001016111e0565b600061111f828486610ed6565b600061125a8284610f63565b50604001919050565b60006107e5828461106d565b6001600160a01b03861681526060602082018190526000906112949083018688610dc5565b82810360408401526112a7818587610ba4565b98975050505050505050565b602080825281810183905260009060408084018583028501820187855b8881101561137c57878303603f190184526112eb828b6115a0565b61012081358552868201611301818a85016108a8565b61130d8a880182610b97565b5061131a88870182610f63565b506080828101359086015260a0611333818401846114af565b83838901526113458489018284610e80565b60c086810135908a015260e080870135908a01526101009586013595909801949094525050509386019350908501906001016112d0565b509098975050505050505050565b918252602082015260400190565b6000602080835283518082850152825b818110156113c4578581018301518582016040015282016113a8565b818111156113d55783604083870101525b50601f01601f1916929092016040019392505050565b6020808252600c908201526b7375622d6f766572666c6f7760a01b604082015260600190565b600061141d8288610f63565b60a0604083015261143260a083018688610e80565b606083019490945250608001529392505050565b60006114528286610f63565b608060408301526114666080830185610f98565b9050826060830152949350505050565b90815260200190565b600086825260606020830152611294606083018688610dc5565b9283526020830191909152604082015260600190565b6000808335601e198436030181126114c5578283fd5b830160208101925035905067ffffffffffffffff8111156114e557600080fd5b60208102360383131561090157600080fd5b6000823580151581146107e5578182fd5b6000808335601e1984360301811261151e578283fd5b830160208101925035905067ffffffffffffffff81111561153e57600080fd5b80360383131561090157600080fd5b60008235600481106107e5578182fd5b60008235600281106107e5578182fd5b6000823560be19833603018112611582578182fd5b90910192915050565b60008235603e19833603018112611582578182fd5b6000823561011e19833603018112611582578182fd5b60008235605e19833603018112611582578182fd5b60008235607e19833603018112611582578182fd5b600481106115ea57fe5b50565b600281106115ea57fe5b6001600160a01b03811681146115ea57600080fdfea2646970667358221220935bcb39979801569bb4046864400bb286747a40c7c4f1cbe55e093ac9d339da64736f6c634300060c0033";
