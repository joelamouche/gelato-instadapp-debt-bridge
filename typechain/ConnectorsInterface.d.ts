/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription
} from ".";

interface ConnectorsInterfaceInterface extends Interface {
  functions: {
    isConnector: TypedFunctionDescription<{
      encode([logicAddr]: [string[]]): string;
    }>;

    isStaticConnector: TypedFunctionDescription<{
      encode([logicAddr]: [string[]]): string;
    }>;
  };

  events: {};
}

export class ConnectorsInterface extends Contract {
  connect(signerOrProvider: Signer | Provider | string): ConnectorsInterface;
  attach(addressOrName: string): ConnectorsInterface;
  deployed(): Promise<ConnectorsInterface>;

  on(event: EventFilter | string, listener: Listener): ConnectorsInterface;
  once(event: EventFilter | string, listener: Listener): ConnectorsInterface;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): ConnectorsInterface;
  removeAllListeners(eventName: EventFilter | string): ConnectorsInterface;
  removeListener(eventName: any, listener: Listener): ConnectorsInterface;

  interface: ConnectorsInterfaceInterface;

  functions: {
    isConnector(
      logicAddr: string[],
      overrides?: TransactionOverrides
    ): Promise<boolean>;

    "isConnector(address[])"(
      logicAddr: string[],
      overrides?: TransactionOverrides
    ): Promise<boolean>;

    isStaticConnector(
      logicAddr: string[],
      overrides?: TransactionOverrides
    ): Promise<boolean>;

    "isStaticConnector(address[])"(
      logicAddr: string[],
      overrides?: TransactionOverrides
    ): Promise<boolean>;
  };

  isConnector(
    logicAddr: string[],
    overrides?: TransactionOverrides
  ): Promise<boolean>;

  "isConnector(address[])"(
    logicAddr: string[],
    overrides?: TransactionOverrides
  ): Promise<boolean>;

  isStaticConnector(
    logicAddr: string[],
    overrides?: TransactionOverrides
  ): Promise<boolean>;

  "isStaticConnector(address[])"(
    logicAddr: string[],
    overrides?: TransactionOverrides
  ): Promise<boolean>;

  filters: {};

  estimate: {
    isConnector(
      logicAddr: string[],
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "isConnector(address[])"(
      logicAddr: string[],
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    isStaticConnector(
      logicAddr: string[],
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "isStaticConnector(address[])"(
      logicAddr: string[],
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;
  };
}
